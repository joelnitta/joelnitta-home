{
  "hash": "537b6d1a933fc5eb4aeb06656481458b",
  "result": {
    "markdown": "---\ntitle: \"Making a fern family tree\"\ndescription: How to make a family-level phylogenetic tree of ferns (or anything else)\ndate: 2023-02-21\nimage: https://github.com/fernphy/fernphy.github.io/raw/main/images/header_ferns.png\ncitation:\n  url: https://www.joelnitta.com/posts/fern-family/\ncategories:\n  - R\n  - ferns\nknitr:\n  opts_chunk: \n      cache: true\nlang: en\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n\nRecently I was asked by a researcher for a family-level phylogenetic tree of ferns. The [Fern Tree of Life (FTOL) project](https://fernphy.github.io/) that I maintain generates a maximally sampled global fern phylogeny, but it is at the species level. So how can we go from that to a family-level tree?\n\nBasically it involves the following steps:\n\n1. Load a list of all species in the tree and the name of the family each belongs to.\n2. Check that each family is [monophyletic](https://en.wikipedia.org/wiki/Monophyly) or monotypic (this must be true for the next step to work^[Another condition of this approach is that that the tree must be ultrametric (all tips at the same depth). If that is not true, then the choice of exemplar species would affect the branchlengths in the family-level tree.]).\n3. Select a single exemplar species for each family (this could be any species within the family, as long as the family is monophyletic).\n4. Trim the tree to only the exemplar species (one per family).\n5. Rename the exemplar species with the family name.\n\nThe code to do all of this is provided below, and is also available at this repo: [https://github.com/fernphy/ftol_family](https://github.com/fernphy/ftol_family).\n\nA few packages used here bear extra mention. The [MonoPhy](https://github.com/oschwery/MonoPhy) package is great at doing exactly what the name would suggest: checking for monophyly. I am a huge fan of the [assertr](https://github.com/ropensci/assertr) package for proactive assertion about data. In this case, the code would fail (issue an error) if the assumption of monophyletic/monotypic families did not hold. Finally, the [ftolr](https://github.com/fernphy/ftolr) package by yours truly provides the most recent fern tree and associated taxonomic data. \n\nOf course, this approach should work for any tree assuming the two requirements are met (the higher level taxa are all monophyletic or monotypic and the tree is ultrametric).\n\n\n::: {.cell hash='index_cache/html/make-tree_900a0de3734f4358d904803ebf30e409'}\n\n```{.r .cell-code}\n# Load packages\nlibrary(tidyverse)\nlibrary(ftolr)\nlibrary(ape)\nlibrary(MonoPhy)\nlibrary(assertr)\n\n# Check FTOL version and cutoff date\nft_data_ver()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1.4.0\"\n```\n:::\n\n```{.r .cell-code}\nft_data_ver(\"cutoff\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2022-12-15\"\n```\n:::\n\n```{.r .cell-code}\n# Load ultrametric fern tree, drop outgroup\nphy <- ft_tree(branch_len = \"ultra\", rooted = TRUE, drop_og = TRUE)\n\n# Inspect:\nphy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nPhylogenetic tree with 5685 tips and 5684 internal nodes.\n\nTip labels:\n  Acrostichum_danaeifolium, Acrostichum_speciosum, Acrostichum_aureum, Ceratopteris_richardii, Ceratopteris_cornuta, Ceratopteris_pteridoides, ...\nNode labels:\n  100/100, 100, 100/100, 100/100, 100/100, 50/100, ...\n\nRooted; includes branch lengths.\n```\n:::\n\n```{.r .cell-code}\n# Load fern taxonomy\ntaxonomy <- ftol_taxonomy %>%\n  # Subset to only species in tree\n  filter(species %in% phy$tip.label)\n\n# Inspect:\ntaxonomy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,685 × 8\n   species                      genus         subfamily     family      suborder    order        major_clade outgroup\n   <chr>                        <chr>         <chr>         <chr>       <chr>       <chr>        <chr>       <lgl>   \n 1 Acrostichum_danaeifolium     Acrostichum   Parkerioideae Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n 2 Actiniopteris_dimorpha       Actiniopteris Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n 3 Actiniopteris_semiflabellata Actiniopteris Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n 4 Actiniopteris_australis      Actiniopteris Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n 5 Actiniopteris_radiata        Actiniopteris Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n 6 Onychium_cryptogrammoides    Onychium      Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n 7 Onychium_moupinense          Onychium      Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n 8 Onychium_japonicum           Onychium      Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n 9 Onychium_lucidum             Onychium      Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n10 Onychium_plumosum            Onychium      Pteridoideae  Pteridaceae Pteridineae Polypodiales Pteridineae FALSE   \n# ℹ 5,675 more rows\n```\n:::\n\n```{.r .cell-code}\n# Analyze monophyly of each family\nfamily_mono_test <- AssessMonophyly(\n  phy,\n  as.data.frame(taxonomy[, c(\"species\", \"family\")])\n)\n\n# Check that all families are monophyletic or monotypic\nfamily_mono_summary <-\n  family_mono_test$family$result %>%\n  rownames_to_column(\"family\") %>%\n  as_tibble() %>%\n  assert(in_set(\"Yes\", \"Monotypic\"), Monophyly)\n\n# Inspect:\nfamily_mono_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48 × 9\n   family            Monophyly MRCA  `#Tips` `Delta-Tips` `#Intruders` Intruders `#Outliers` Outliers\n   <chr>             <chr>     <chr> <chr>   <chr>        <chr>        <chr>     <chr>       <chr>   \n 1 Pteridaceae       Yes       5696  885     0            0            \"\"        NA          \"\"      \n 2 Polypodiaceae     Yes       6590  933     0            0            \"\"        NA          \"\"      \n 3 Davalliaceae      Yes       7522  42      0            0            \"\"        NA          \"\"      \n 4 Oleandraceae      Yes       7563  10      0            0            \"\"        NA          \"\"      \n 5 Tectariaceae      Yes       7572  138     0            0            \"\"        NA          \"\"      \n 6 Nephrolepidaceae  Yes       7709  19      0            0            \"\"        NA          \"\"      \n 7 Lomariopsidaceae  Yes       7727  44      0            0            \"\"        NA          \"\"      \n 8 Dryopteridaceae   Yes       7770  964     0            0            \"\"        NA          \"\"      \n 9 Didymochlaenaceae Yes       8733  9       0            0            \"\"        NA          \"\"      \n10 Hypodematiaceae   Yes       8741  26      0            0            \"\"        NA          \"\"      \n# ℹ 38 more rows\n```\n:::\n\n```{.r .cell-code}\n# Get one exemplar tip (species) per family\nrep_tips <-\n  taxonomy %>%\n  group_by(family) %>%\n  slice(1) %>%\n  ungroup()\n\n# Subset phylogeny to one tip per family\nphy_family <- ape::keep.tip(phy, rep_tips$species)\n\n# Relabel with family names\nnew_tips <-\ntibble(species = phy_family$tip.label) %>%\n  left_join(rep_tips, by = \"species\") %>%\n  pull(family)\n\nphy_family$tip.label <- new_tips\n\n# Visualize tree\nplot(ladderize(phy_family), no.margin = TRUE)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/make-tree-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}